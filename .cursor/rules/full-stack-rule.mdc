---
alwaysApply: true
---
# Development Approach

- Build incrementally - backend first, then frontend
- Test each component as you build it
- Keep solutions simple and straightforward
- Focus on meeting requirements rather than adding extras

## Code Standards

- Write clean, readable code with meaningful names
- Add comments for complex logic (especially price calculation)
- Use consistent formatting and structure
- Remove debugging code before final version

## Backend Guidelines

- Use Node.js/Express for simplicity
- Implement proper error handling
- Enable CORS for frontend connection
- Test API endpoints thoroughly
- Validate price calculation formula

## Frontend Guidelines

- Match the provided design as closely as possible
- Ensure responsive behavior on mobile and desktop
- Test color picker functionality thoroughly
- Verify star rating conversion is accurate
- Use semantic HTML and proper accessibility

## File Organization

- Keep backend and frontend in separate folders
- Use clear file and folder names
- Include package.json files with proper dependencies
- Add .gitignore files appropriately

## Testing Priorities

1. Price calculation accuracy
2. Color picker image switching
3. Star rating conversion (percentage to 5-star)
4. Responsive design on different screen sizes
5. API data fetching and display

## Deployment Preparation

- Include clear setup instructions
- Add environment variable examples
- Test the build process
- Ensure all dependencies are listed

## Focus Areas

- Functionality over aesthetics (but still match the design)
- Working features over complex architecture
- Clean, maintainable code
- Proper error handling for user experience
